{"version":3,"sources":["Component/Home.jsx","Component/BlogList.jsx","App.js","serviceWorker.js","index.js","icon-spring-framework.svg","img/microservice.png","img/pinakee.png","img/blector.png","img/wip.png","Component/BlogPage.jsx"],"names":["opnSrcIcoStl","height","opnSrcBodyHeight","Home","react_default","a","createElement","className","alt","width","src","class","id","springICO","style","microservice","target","rel","href","pinakee","firestrap","blector","Component","BlogList","state","content","blogData","blogContent","getContent","self","Object","assertThisInitialized","_this","axios","get","headers","content-type","then","resp","data","filter","d","type","sort","b","Date","name","setState","err","console","getPost","dir","url","getPostSummary","path","log","formatDate","date","month","getMonth","day","getDate","year","getFullYear","length","join","_this2","this","map","date_title","split","title","findAndReplace","link","key","Link","to","onClick","e","text","post","string","replacement","i","replace","thisMonth","Main","Switch","Route","exact","component","BlogPage","Menu","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","App_Menu","App_Main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p","pageURL","pageName","concat","Buffer","toString","renderAsMarkdown","react__WEBPACK_IMPORTED_MODULE_5___default","reactRender","props","params","resource","blg","folder"],"mappings":"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","file":"static/js/main.dd95ce33.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport springICO from '../icon-spring-framework.svg';\nimport microservice from '../img/microservice.png';\nimport pinakee from '../img/pinakee.png';\nimport blector from '../img/blector.png';\nimport firestrap from '../img/wip.png';\n\nconst opnSrcIcoStl={\n    height:'300px'\n    };\nconst opnSrcBodyHeight={\n    height:'200px'\n    };\nclass Home extends Component {\n    \n    render() {\n        return (\n            <div>\n                <section className=\"u-content-space\">\n                    <div className=\"container\">\n                        <div className=\"row \">\n                            <div className=\"col-md-3\">\n                                <img alt=\"\" width=\"300\" className=\"u-box-shadow-lg img-fluid rounded-circle mt-1\" src=\"https://avatars1.githubusercontent.com/u/7747313?s=460&amp;v=4\"></img>\n                            </div>\n                            <div className=\"col-md-9\">\n                                <h1>VijayKarthik Nagarajan</h1>\n                                <h4><i>Full Stack/Polyglot: Engineer (Development,Archietct)</i></h4>\n                                13+ years of industrial experience and still going on.<br/>\n                                Experience on Microservice, Docket, PCF, heroku. <br/>\n                                Interested in block chain technology and contribution to public via blog or opensource solution.<br/>\n                                Working on Messaging system using spring integration.\n                            </div>\n                    </div>\n                    </div>\n                </section>\n                <section class=\"bg-secondary py-4\">\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-md-12 text-center text-md-left mb-3 mb-md-0 text-white\">\n                                <span class=\" \"></span>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section class=\"bg-light u-content-space\">\n                    <div class=\"container\">\n                        <header class=\"text-center w-md-50 mx-auto mb-8\">\n                            <h2 class=\"h1\">Skills</h2>\n                            <p class=\"h5\">Providing solutions on the key technologies, for faster time to market</p>\n                        </header>\n                        <div class=\"row\">\n                            <div class=\"col-lg-4 mb-5 mb-lg-0\">\n                                <div class=\"display-4 text-primary mb-2\">\n                                    <i class=\"fas fa-dice-d20\"></i>\n                                </div>\n                                <h4 class=\"h5\">Microservices</h4>\n                                <p>Achieve virtually any look and layout design within one UI Kit solution.</p>\n                            </div>\n\n                            <div class=\"col-lg-4 mb-5 mb-lg-0\">\n                                <div class=\"display-4 text-primary mb-2\">\n                                    <i class=\"fas fa-braille\"></i>\n                                </div>\n                                <h4 class=\"h5\">Firestrap Framework</h4>\n                                <p>We strive to figure out ways to help your audience grow through all platforms.</p>\n                            </div>\n\n                            <div class=\"col-lg-4 mb-5 mb-lg-0\">\n                                <div class=\"display-4 text-primary mb-2\">\n                                    <i class=\"fas fa-cubes\"></i>\n                                </div>\n                                <h4 class=\"h5\">Blockchain Technologies</h4>\n                                <p>Find what you need in one template and combine features at will.</p>\n                            </div>\n                        </div>\n                        <hr class=\"my-8\"></hr>\n\n                        <div class=\"row\">\n                            <div class=\"col-lg-4 mb-5 mb-lg-0\">\n                                <div class=\"display-4 text-primary mb-2\">\n                                    <img class=\"sidebyside\" width=\"60\" id=\"spring-framework-icon\" src={springICO} alt=\"spring boot framework icon\"></img>\n                                </div>\n                                <h4 class=\"h5\">Spring Boot / Cloud</h4>\n                                <p>Easy and fast adjustments of elements are possible with Stream UI Kit.</p>\n                            </div>\n\n                            <div class=\"col-lg-4 mb-5 mb-lg-0\">\n                                <div class=\"display-4 text-primary mb-2\">\n                                    <i class=\"fas fa-box\"></i>\n                                </div>\n                                <h4 class=\"h5\">Containerization</h4>\n                                <p>Our React Powered App will save you tons of time and cost in your projects.</p>\n                            </div>\n\n                            <div class=\"col-lg-4 mb-5 mb-lg-0\">\n                                <div class=\"display-4 text-primary mb-2\">\n                                    <i class=\"fas fa-circle-notch\"></i>\n                                </div>\n                                <h4 class=\"h5\">Agile</h4>\n                                <p>Power your app with Angular components for no cost within one stop solution.</p>\n                            </div>\n                        </div>\n\n                    </div>\n                </section>\n                <section class=\"u-content-space\">\n                    <div class=\"container\">\n                        <header class=\"text-center w-md-50 mx-auto mb-8\">\n                            <h2 class=\"h1\">Opensource Contribution</h2>\n                            <p class=\"h5\">Few notable contributions on the Opensource</p>\n                        </header>\n\n                        <div class=\"row\">\n                            <div class=\"col-lg-3 col-sm-6 mb-5\">\n                                <div class=\"card u-box-shadow-lg\">\n                                    <div style={opnSrcIcoStl}>\n                                    <img class=\"card-img-top\" src={microservice} alt=\"Microservice\" width=\"400\" height=\"300\"></img>\n                                    </div>\n                                    <div class=\"card-body\" style={opnSrcBodyHeight}>\n                                        <h5 class=\"card-title\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/Spring-boot-microservice-Reference-Implementaion-setup-framework\">Microservice Reference Impl</a></h5>\n                                        <p class=\"card-text\">Reference implementation of the Microserivce using springboot.</p>\n                                        \n                                    </div>\n                                    <div class=\"card-footer\">\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/Spring-boot-microservice-Reference-Implementaion-setup-framework\" class=\"btn btn-primary float-right\">View Details</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-3 col-sm-6 mb-5\">\n                                <div class=\"card u-box-shadow-lg\">\n                                    <div style={opnSrcIcoStl}>\n                                    <img class=\"card-img-top\" src={pinakee} width=\"400\" height=\"300\" alt=\"Pinakee Transformar Xquery\"></img>\n                                    </div>\n                                    <div class=\"card-body\" style={opnSrcBodyHeight}>\n                                        <h5 class=\"card-title\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/pinakee\">Pinakee</a>   </h5>\n                                        <p class=\"card-text\">Pinakee is a ReST based API for XML transformation using Xquery</p>\n                                        \n                                    </div>\n                                    <div class=\"card-footer\">\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/pinakee\" class=\"btn btn-primary float-right\">View Details</a>\n                                </div>\n                                </div>\n                                \n                            </div>\n                            <div class=\"col-lg-3 col-sm-6 mb-5\">\n                                <div class=\"card u-box-shadow-lg\">\n                                    <div style={opnSrcIcoStl}>\n                                    <img class=\"card-img-top\"  src={firestrap}  width=\"400\" alt=\"FireStrap\"></img>\n                                    </div>\n                                    <div class=\"card-body\" style={opnSrcBodyHeight}>\n                                        <h5 class=\"card-title\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/firestrap\">Firestrap</a></h5>\n                                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                                        \n                                    </div>\n                                    <div class=\"card-footer\">\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/firestrap\" class=\"btn btn-primary float-right\">View Details</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-3 col-sm-6 mb-5\">\n                                <div class=\"card u-box-shadow-lg\">\n                                    <div style={opnSrcIcoStl}>\n                                    <img class=\"card-img-top\" src={blector}  width=\"400\" height=\"300\" alt=\"Blector\"></img>\n                                    </div>\n                                    <div class=\"card-body\" style={opnSrcBodyHeight}>\n                                        <h5 class=\"card-title\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/nvijaykarthik/block-chain-electronic-voting-reference-implementation-using-javascript\">Blector</a></h5>\n                                        <p class=\"card-text\">Electronic Voting using block chain (reference Implementation) in Javascript</p>\n                                        \n                                    </div>\n                                    <div class=\"card-footer\">\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\"  href=\"https://github.com/nvijaykarthik/block-chain-electronic-voting-reference-implementation-using-javascript\" class=\"btn btn-primary float-right\">View Details</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/markdown.css';\nimport { Link } from 'react-router-dom';\n\nclass BlogList extends Component {\n    state = {\n        content: '',\n        blogData: [],\n        blogContent: []\n    }\n\n    render() {\n        return (\n            <section className=\"u-content-space\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-10\">\n                            {this.state.blogContent.map(b => {\n                                let nameRemovedMd=b.name.split(\".\");\n                                let date_title=nameRemovedMd[0].split(\"_\");\n                                let title=this.findAndReplace(date_title[1],\"-\",\" \")\n                                let link='/blog/'+b.path\n                                return(\n                                    <div key={b.name}>\n                                    <header className=\"mb-0\">\n                                        <Link to={link}><h2 className=\"h1\">{title}</h2></Link> \n                                        <p className=\"h5\">{date_title[0]}</p>\n                                    </header>\n                                    <div>\n                                    \n                                    </div>\n                                     <Link to={link} className=\"btn btn btn-outline-primary\">Read More...</Link>\n                                    </div>\n                                )\n                                })\n                            }\n                        </div>\n                        <div className=\"col-md-2\">\n                            <h3 className=\"h5 mb-3\">Filter By Date</h3>\n                            <div className=\"list-group\">\n                                {this.state.blogData.map(b => {\n                                   return <a key={b.name} onClick={(e) => this.getPost(b.name, e)} href=\"#\"\n                                            className=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\">\n                                        {b.name}\n                                    </a>\n                                })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n\n    getContent = () => {\n        let self = this;\n        let url = 'https://api.github.com/repos/nvijaykarthik/nvijaykarthik.github.io/contents/_blog';\n        let header = { 'content-type': 'application/vnd.github.VERSION.raw' }\n        axios.get(url,\n            { headers: header }).then(\n            resp => {\n                let blogData = resp.data.filter(d => d.type === 'dir');\n                blogData.sort((a, b) => {\n                    return new Date(b.name) - new Date(a.name);\n                })\n                self.setState({\n                    blogData: blogData\n                })\n            },\n            err => {\n                console.err(err);\n            }\n            )\n    }\n\n    getPost = (dir) => {\n        let self = this;\n        let url = 'https://api.github.com/repos/nvijaykarthik/nvijaykarthik.github.io/contents/_blog/' + dir;\n        let header = { 'content-type': 'application/vnd.github.VERSION.raw' }\n        axios.get(url,\n            { headers: header }).then(\n            resp => {\n                let blogData = resp.data.filter(d => d.type === 'file');\n                self.setState({\n                    blogContent: blogData\n                })\n            },\n            err => {\n                console.err(err);\n            }\n            )\n    }\n\n    getPostSummary=(path)=>{\n        let self = this;\n        let url = 'https://api.github.com/repos/nvijaykarthik/nvijaykarthik.github.io/contents/' + path;\n        let header = { 'content-type': 'application/vnd.github.VERSION.raw' }\n        axios.get(url,\n            { headers: header }).then(\n            resp => {\n                console.log(resp.data.content)\n            },\n            err => {\n                console.err(err);\n            }\n            )\n    }\n\n    formatDate = (date) => {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2) month = '0' + month;\n        if (day.length < 2) day = '0' + day;\n\n        return [year, month].join('-');\n    }\n\n    renderAsMarkdown(text) {\n        let self = this;\n        let url = \"https://api.github.com/markdown/raw\"\n        let header = { 'content-type': 'text/plain' }\n        axios.post(url, text, { headers: header }).then(\n            resp => {\n                self.setState({\n                    content: resp.data\n                })\n            },\n            err => {\n                console.err(err);\n            }\n        );\n    }\n\n    findAndReplace(string, target, replacement) {\n\n        var i = 0, length = string.length;\n        for (i; i < length; i++) {\n            string = string.replace(target, replacement);\n        }\n        return string;\n    }\n\n    componentDidMount() {\n        this.getContent();\n        let thisMonth = this.formatDate(new Date());\n        this.getPost(thisMonth);\n    }\n\n\n}\n\nexport default BlogList;\n","import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Home  from './Component/Home';\nimport BlogList from './Component/BlogList';\nimport BlogPage from './Component/BlogPage';\n\n// <Route exact path='/blog/:name' render={(props) => <BlogPage globalStore={globalStore} {...props} /> } />\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={BlogList} />\n      <Route exact path='/about' component={Home}/>\n      <Route exact path='/blog/:blg/:folder/:name' component={BlogPage}/>\n    </Switch>\n  </main>\n)\n\nconst Menu = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-light navbar-dark bg-primary fixed-top\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href=\"index.html\">\n        Vijaykarthik n\n      </a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n        <ul className=\"navbar-nav ml-auto mr-sm-2 mt-2 mt-lg-0\">\n          <li className=\"nav-item active mr-3\">\n            <Link to='/' className='nav-link'>Home</Link>\n          </li>\n          <li className=\"nav-item mr-3\">\n            <Link to='/about' className='nav-link'>About Me</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n)\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <Menu />\n        </header>\n        <main>\n          <Main />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/bootstrap.css';\nimport './css/styles.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>,  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon-spring-framework.e7aef24d.svg\";","module.exports = __webpack_public_path__ + \"static/media/microservice.31fd9959.png\";","module.exports = __webpack_public_path__ + \"static/media/pinakee.44aea67d.png\";","module.exports = __webpack_public_path__ + \"static/media/blector.ab880b1f.png\";","module.exports = __webpack_public_path__ + \"static/media/wip.aa6d3f92.png\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport reactRender from 'react-render-html';\r\nimport '../css/markdown.css';\r\n\r\nconst pageURL='https://api.github.com/repos/nvijaykarthik/nvijaykarthik.github.io/contents/';\r\n\r\nclass BlogPage extends Component {\r\n    state = {\r\n        content: '',\r\n        name: '',\r\n        date:''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"u-content-space\">\r\n                <div className=\"container\">\r\n                    <header class=\"mb-0\">\r\n                        <h2 class=\"h1\">{this.state.name}</h2>\r\n                        <p class=\"h5\">{this.state.date}</p>\r\n                    </header>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-12 markdown-body\">\r\n                            {reactRender(this.state.content)}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    getContent = (pageName) => {\r\n        let url = pageURL.concat(pageName);\r\n        let header = { 'content-type': 'application/vnd.github.VERSION.raw' }\r\n        axios.get(url,\r\n            { headers: header }).then(\r\n                resp => {\r\n                    let buff = new Buffer(resp.data.content, 'base64');\r\n                    let text = buff.toString('ascii');\r\n\r\n                     let nameRemovedMd=resp.data.name.split(\".\");\r\n                    let date_title=nameRemovedMd[0].split(\"_\");\r\n                    let title=this.findAndReplace(date_title[1],\"-\",\" \")\r\n\r\n                    this.setState({\r\n                        name: title,\r\n                        date:date_title[0]\r\n                    })\r\n                    this.renderAsMarkdown(text);\r\n                },\r\n                err => {\r\n                    console.err(err);\r\n                }\r\n            )\r\n    }\r\n    renderAsMarkdown(text) {\r\n        let self = this;\r\n        let url = \"https://api.github.com/markdown/raw\"\r\n        let header = { 'content-type': 'text/plain' }\r\n        axios.post(url, text, { headers: header }).then(\r\n            resp => {\r\n                self.setState({\r\n                    content: resp.data\r\n                })\r\n            },\r\n            err => {\r\n                console.err(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    findAndReplace(string, target, replacement) {\r\n\r\n        var i = 0, length = string.length;\r\n        for (i; i < length; i++) {\r\n            string = string.replace(target, replacement);\r\n        }\r\n        return string;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let name=this.props.match.params.name;\r\n        let blg=this.props.match.params.blg;\r\n        let folder=this.props.match.params.folder;\r\n        let resource=blg+\"/\"+folder+\"/\"+name\r\n        this.getContent(resource);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BlogPage;\r\n"],"sourceRoot":""}